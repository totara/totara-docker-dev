include totara-server.conf;


# Here you can define how you want nginx to handle requests made remotely via ngrok.
# Take caution as potentially anyone on the internet could be trying to access your machine if they have your ngrok URL.


# Limit uploads to not be anything to extreme
client_max_body_size 10M;

# Don't send server information header
server_tokens off;

# Since we are running nginx on a custom port, we don't want it to get included in the redirects performed by try_files.
port_in_redirect off;

location = /404.html {
    root /dev/null; # Will show the default nginx error page
    internal;
}
location = /500.html {
    root /dev/null; # Will show the default nginx error page
    internal;
}
# Redirect errors to more generic versions
error_page 403 =404 /404.html;
error_page 501 502 503 =500 /500.html;

location / {
    try_files $uri $uri/ =404;
}

location ~ ^.*\/(cli|tests|db|lang|classes|amd\/src|rb_sources|yui\/src)\/.*$ {
    deny all;
}

if (!-f "$document_root/version.php") {
    # No version.php exists, so the site isn't set up properly or the forwarding host is incorrect
    return 404;
}

location ~ [^/]\.php(/|$) {
    fastcgi_pass  $upstream:9000;
    include       fastcgi_params;

    fastcgi_send_timeout 300s;
    fastcgi_read_timeout 300s;

    # regex to split $uri to $fastcgi_script_name and $fastcgi_path
    fastcgi_split_path_info ^(.+\.php)(/.+)$;

    fastcgi_param PATH_INFO       $fastcgi_path_info;
    fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
    fastcgi_param SCRIPT_NAME     $fastcgi_script_name;

    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;
}

location ~ /\. {
    deny all;
}

location ~ .*\.(txt|md|json|xml|mustache)$ {
    deny all;
}