#!/bin/bash

# Standard boilerplate code for getting the paths and environment variables we need.
script_path="$( cd "$(dirname "$0")" ; pwd -P )"
project_path="$( cd $script_path && cd ..; pwd -P )"
set -a; source "$project_path/.env"; set +a

if [[ -z "$1" ]]; then
    $script_path/texec php "${INTERACTIVE_SHELL:-zsh}"
    exit
fi

# If the first arg is 'debug', then use the debug container
php_container_command="php"
if [[ "$1" == "debug" ]]; then
    php_container_command="php-debug"
    shift
fi

# Replace local path with remote path in any file path arguments
# e.g. //wsl.localhost/Ubuntu/home/me/totara-sites/mysite/server/plugin/test.php -> /var/www/totara/src/mysite/server/plugin/test.php
args=()
for arg in "$@"; do
    if [[ "$arg" == *"$LOCAL_SRC"* ]]; then
        arg="$REMOTE_SRC${arg#*$LOCAL_SRC}"
        # Strip any unescaped single quote characters
        arg=$(echo "$arg" | sed "s/\([^']\)'\([^']\)/\1\2/g; s/^'//; s/'$//")
    fi
    args+=("$arg")
done

# Quote command to be reused as shell input
command_str=$(printf " %q" "${args[@]}")

# Handle being called with a php script instead of a command
if [[ $1 == *.php ]]; then
    command_str="$php_container_command $command_str"
fi

$script_path/texec $php_container_command bash -ic "$command_str"
